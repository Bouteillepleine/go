name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP13r-A15"
  BRANCH: "android14-6.1"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Free Disk Space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash

      - name: Initialize ccache
        run: |
          mkdir -p ~/.ccache
          echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV

      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('**/build.config.gki') }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip curl git zip unzip gcc g++ make ninja-build file bc bison flex \
            libssl-dev libelf-dev wget build-essential python3-dev python3-setuptools \
            rsync ccache cmake libdw-dev zlib1g-dev dwarves

      - name: Setup Python and Repo Tool
        run: |
          python3 -m pip install --upgrade pip
          pip3 install gitpython xmltodict
          mkdir -p ~/.bin
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH
          echo "PATH=$HOME/.bin:$PATH" >> $GITHUB_ENV

      - name: Verify Repo Tool
        run: |
          which repo || { echo "repo tool not found"; exit 1; }
          repo --version || { echo "repo tool not working"; exit 1; }

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Configure Build Directory
        run: |
          ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
          mkdir -p "builds/${ROOT_DIR}" || { echo "Error creating build directory"; exit 1; }
          cd "builds/${ROOT_DIR}"

      - name: Install Repo Tool
        run: |
          mkdir -p ~/.bin
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH
          echo "PATH=$HOME/.bin:$PATH" >> $GITHUB_ENV

      - name: Verify Repo Tool
        run: |
          which repo || { echo "repo tool not found"; exit 1; }
          repo --version || { echo "repo tool not working"; exit 1; }

      - name: Cache Repo Sync
        id: repo-cache
        uses: actions/cache@v3
        with:
          path: kernel_platform/oneplus13r_v
          key: repo-sync-${{ runner.os }}-${{ hashFiles('**/oneplus_13r.xml') }}
          restore-keys: |
            repo-sync-${{ runner.os }}-

      - name: Setup Kernel Source
        run: |
          mkdir -p kernel_platform/oneplus13r_v || { echo "Error creating kernel source directory"; exit 1; }
          cd kernel_platform/oneplus13r_v
          if [[ -z "$(ls -A .)" ]]; then
            repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus_13r.xml --depth=1 || { echo "Failed to initialize repo"; exit 1; }
            repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags || { echo "Failed to sync repo"; exit 1; }
          fi
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      - name: Clone KernelSU-Next Repository
        run: |
          cd kernel_platform/oneplus13r_v
          git clone https://github.com/KernelSU-Next/KernelSU-Next.git --branch next --depth=1 || { echo "Failed to clone KernelSU-Next"; exit 1; }

      - name: Create Kernel Platform Directory
        run: |
          mkdir -p kernel_platform/oneplus13r_v/kernel_platform || { echo "Error creating kernel_platform directory"; exit 1; }
          cd kernel_platform/oneplus13r_v/kernel_platform

      - name: Setup KernelSU
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next || { echo "Failed to run setup.sh"; exit 1; }
          git submodule update --init --recursive || { echo "Failed to initialize submodules"; exit 1; }
          cd KernelSU-Next/kernel
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" Makefile

      # Rest of the steps remain unchanged...
