name: Build OnePlusOSS (Optimized)

on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "SM"
        required: true
        default: 'sm8750'
      FEIL:
        description: "Manifest"
        required: true
        default: 'JiuGeFaCai_oneplus_13_v'
      CPUD:
        description: "sun"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "android"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "version"
        required: true
        default: '6.6'
      KSUNEXT_ENABLED:
        description: "Enable KernelSU Next"
        required: true
        default: 'true'
      SUSFS_ENABLED:
        description: "Enable susfs"
        required: true
        default: 'true'

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      KERNEL_DIR: kernel_workspace/kernel_platform

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "build@build.com"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 git curl repo bc libncurses-dev flex bison openssl libssl-dev libelf-dev

      - name: Cache repo sources
        uses: actions/cache@v3
        with:
          path: kernel_workspace
          key: ${{ runner.os }}-repo-${{ github.event.inputs.CPU }}-${{ github.event.inputs.FEIL }}-${{ github.sha }}

      - name: Initialize repo and sync
        run: |
          set -ex
          mkdir -p kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU }} \
            -m ${{ github.event.inputs.FEIL }}.xml \
            --depth=1
          repo sync -j$(nproc) --force-sync --no-clone-bundle --no-tags

          # Cleanup and version fixes
          rm -f $KERNEL_DIR/common/android/abi_gki_protected_exports_* || true
          rm -f $KERNEL_DIR/msm-kernel/android/abi_gki_protected_exports_* || true
          sed -i 's/ -dirty//g' $KERNEL_DIR/common/scripts/setlocalversion
          sed -i 's/ -dirty//g' $KERNEL_DIR/msm-kernel/scripts/setlocalversion

      - name: Set up KernelSU Next
        if: github.event.inputs.KSUNEXT_ENABLED == 'true'
        run: |
          set -ex
          cd $KERNEL_DIR
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" -o setup_kernelsu.sh
          chmod +x setup_kernelsu.sh
          ./setup_kernelsu.sh next-susfs-dev

          cd KernelSU-Next
          KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up susfs
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          set -ex
          cd kernel_workspace
          git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          
          # Copy patches and files
          cd $KERNEL_DIR
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../kernel_patches/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./KernelSU-Next/
          cp ../kernel_patches/next/syscall_hooks.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          # Apply patches
          cd ./KernelSU-Next
          patch -p1 < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          # Replace next_hooks.patch with syscall_hooks.patch
          cp ../../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
          patch -p1 -F 3 < syscall_hooks.patch


      - name: Apply kernel configurations
        run: |
          set -ex
          cd $KERNEL_DIR/common/arch/arm64/configs

          # Add KernelSU and susfs configs
          cat <<EOF >> gki_defconfig
          CONFIG_KSU=y
          CONFIG_KSU_WITH_KPROBES=n
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
          CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=n
          CONFIG_TMPFS_XATTR=y
          CONFIG_TMPFS_POSIX_ACL=y
          CONFIG_IP_NF_TARGET_TTL=y
          CONFIG_IP6_NF_TARGET_HL=y
          CONFIG_IP6_NF_MATCH_HL=y
          EOF

          # Modify build config
          sed -i '2s/check_defconfig//' ../build.config.gki || { echo "build.config.gki modification failed"; exit 1; }

      - name: Build kernel
        run: |
          set -ex
          cd kernel_workspace
          ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} perf | tee build.log

      - name: Package artifacts
        run: |
          set -ex
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3
          rm -rf AnyKernel3/.git
          cp $KERNEL_DIR/out/msm-kernel-${{ github.event.inputs.CPUD }}-perf/dist/Image AnyKernel3/
          zip -r AnyKernel3_${{ github.event.inputs.FEIL }}.zip AnyKernel3/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build_Artifacts_${{ github.event.inputs.FEIL }}
          path: |
            AnyKernel3_${{ github.event.inputs.FEIL }}.zip
            $KERNEL_DIR/out/msm-kernel-*/dist/Image
            build.log

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Build failed! Check logs for details')
